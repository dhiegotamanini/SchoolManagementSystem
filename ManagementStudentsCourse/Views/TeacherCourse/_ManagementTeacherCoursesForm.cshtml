@using Curso.Models.Dtos
@model ManagementTeacherCourseDto



@{
    var listCourses = ViewBag.Courses ?? null;
    var hasError = ViewBag.HasError ?? false;
    var message = ViewBag.Message;

    var teachers = ViewBag.Teachers ?? null;
    if (teachers != null)
    {
        TeacherDto item = new TeacherDto() { Id = 0, Name = "Select one item" };
        teachers.Insert(0, item);
    }
}

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-@(hasError ? "danger" : "primary")" role="alert">
        @message
    </div>
}

<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @if (ViewBag.Teachers != null)
                {
                    <div class="form-group">
                        <label for="formGroupExampleInput2">Teacher</label>
                        <select class="form-control" asp-for="TeacherId" onchange="MeuMotodoTest();">
                            @foreach (var item in ViewBag.Teachers)
                            {
                                <option value="@item.Id">@item.Name</option>
                            }
                        </select>
                    </div>
                }
                <input type="hidden" class="form-control" asp-for="Id" />
                @Html.ValidationMessageFor(x => x.TeacherId, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label>Course</label>

                @for (var i = 0; i < listCourses.Count; i++)
                {
                    <div class="row">
                        <div class="col-md-3">
                            <div class="form-check">

                                @if (Model != null && Model.CoursesId != null)
                                {
                                    if (Model.CoursesId.Contains(listCourses[i].Id))
                                    {
                                        <input class="form-check-input" type="checkbox" checked
                                               name="CoursesId" id="CoursesId@i" value="@listCourses[i].Id">
                                    }
                                    else
                                    {
                                        <input class="form-check-input" type="checkbox" name="CoursesId" id="CoursesId@i" value="@listCourses[i].Id">
                                    }
                                }
                                else
                                {
                                    <input class="form-check-input" type="checkbox" name="CoursesId" id="CoursesId@i" value="@listCourses[i].Id">
                                }

                                <label class="form-check-label" for="inlineCheckbox1">@listCourses[i].Name</label>

                                <input type="hidden" asp-for="TeacherName" />
                                <input type="hidden" asp-for="TeacherId" />
                                @if (Model?.CoursesId != null && Model?.CoursesId.Count > i)
                                {
                                    <input type="hidden" asp-for="CoursesId[i]" />
                                }

                            </div>
                        </div>
                    </div>
                }


            </div>

            <div class="form-group mt-3">
                <div class="col-md-offset-2 col-md-10">
                    <button asp-action="ManagementTeacherCourse" asp-controller="TeacherCourse" class="btn btn-primary">Save</button>
                    <a asp-action="Index" asp-controller="TeacherCourse" class="btn btn-secondary">Back to List</a>
                </div>
            </div>

            @Html.AntiForgeryToken()
        </form>
    </div>

</div>
